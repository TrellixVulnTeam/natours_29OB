*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/* note: https://stackoverflow.com/questions/31317238/why-use-selector-in-combination-with-before-and-after */
html {
  font-size: 62.5%;
  /* root font size */
  /* 62.5% x 16 = 10 px  */
  /* user may change root to something else other than 16 */ }

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 1.6rem; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /* set here and the universal selector will inherit */ }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(197, 137, 58, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  position: relative; }

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

.header__logo:hover {
  animation: keepRotating 0.1s;
  animation-iteration-count: 10; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* to fix shaky  animation*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-delay: 0.5s;
  /* animation-iteration-count: 3; */
  animation-timing-function: ease-in; }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  animation: moveInRight 1s ease-out; }

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(-60deg); }
  60% {
    transform: rotate(10deg); }
  80% {
    transform: translateX(1rem) rotate(-5deg); }
  100% {
    opacity: 1;
    transform: translateX(0) rotate(0deg); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes keepRotating {
  0% {
    transform: rotate(0deg); }
  80% {
    transform: rotate(180deg); }
  100% {
    transform: rotate(360deg); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.8);
  /* x-dir, y-dir, blur, color */ }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(255, 0, 0, 0.8); }

.btn::after {
  content: '';
  /* must have a content property */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  /* parent is .btn for position relative*/
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 1s;
  /* this is the initial state of .btn:hover::after, so we add transition property here to manage the transform protery there */ }

.btn:hover::after {
  transform: scaleX(2) scaleY(1.6);
  opacity: 0; }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn--white::after {
  background-color: #fff; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* to prevent the animation shows up in the beginning */
  animation-fill-mode: backwards; }
